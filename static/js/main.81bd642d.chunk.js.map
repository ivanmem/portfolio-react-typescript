{"version":3,"sources":["localization/i18n.ts","components/MyProjects/MyProjects.tsx","components/AboutMe/SkillComponent/SkillComponent.tsx","components/AboutMe/Skills/Skills.tsx","routes/routes.ts","components/AboutMe/AboutMe.tsx","routes/AppRouter.tsx","components/NavBar/NavBar.tsx","components/Contacts/Contacts.tsx","assets/icons/github.svg","assets/icons/vk.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["languages","label","value","i18n","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","process","addPath","fallbackLng","supportedLngs","map","x","debug","interpolation","escapeValue","MyProjects","t","useTranslation","className","href","rel","target","SkillComponent","skill","icon","mySkills","TagFacesIcon","Skills","data","routes","path","component","AppRouter","from","to","NavBar","location","useLocation","langs","filter","language","lang","type","onClick","changeLanguage","then","toUpperCase","data-active","pathname","ContactType","contacts","name","url","Site","github","vk","Contacts","c","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.81bd642d.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nexport const languages = [\n  { label: 'en', value: 'en-US' },\n  { label: 'ru', value: 'ru-RU' }\n];\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`,\n      addPath : `${process.env.PUBLIC_URL}/locales/locales/add/{{lng}}/{{ns}}`,\n    },\n    fallbackLng: languages[0].value,\n    supportedLngs: languages.map(x => x.value),\n    debug: false,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\r\nimport './MyProjects.scss';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function MyProjects() {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <section className=\"my-projects\">\r\n      <dl>\r\n        <dt>{t('my projects')}:</dt>\r\n        <dd>\r\n          <a\r\n            href=\"https://cm.animebots.com/\"\r\n            rel=\"noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            {t('amadeus')}\r\n          </a>\r\n        </dd>\r\n        <dd>{t('other')}..</dd>\r\n      </dl>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Skill from '../../../interfaces/Skill';\r\nimport './SkillComponent.scss';\r\n\r\nexport default function SkillComponent(skill: Skill) {\r\n  return (\r\n    <div className=\"skill\">\r\n      {skill.icon && <skill.icon />}&nbsp;{skill.label}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport './Skills.scss';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport SkillComponent from '../SkillComponent/SkillComponent';\r\nimport Skill from '../../../interfaces/Skill';\r\n\r\nconst mySkills: Skill[] = [\r\n  { label: 'C#', icon: TagFacesIcon },\r\n  { label: 'TypeScript', icon: TagFacesIcon },\r\n  { label: 'JavaScript' },\r\n  { label: 'React' },\r\n  { label: 'Angular' },\r\n];\r\n\r\nexport default function Skills() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <section className=\"skills\">\r\n      <div>\r\n        <h2>{t(\"skills title\")}</h2>\r\n        <div className=\"skills__list\">\r\n          {mySkills.map((data) => (\r\n            <SkillComponent\r\n              key={data.label}\r\n              icon={data.icon}\r\n              label={data.label}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import Route from '../interfaces/Route';\r\nimport AboutMe from '../components/AboutMe/AboutMe';\r\n\r\nconst routes: Route[] = [\r\n  {\r\n    path: '/about-me',\r\n    label: 'about me',\r\n    component: AboutMe,\r\n  }\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport MyProjects from '../MyProjects/MyProjects';\r\nimport './AboutMe.scss';\r\nimport Skills from './Skills/Skills';\r\n\r\nexport default function AboutMe() {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <main className=\"about-me\">\r\n      <section className=\"my-info\">\r\n        <div className=\"my-info_text\">\r\n          <span className=\"my-info_text-profession\">\r\n            {t('profession')}\r\n          </span>\r\n        </div>\r\n      </section>\r\n      <Skills />\r\n      <MyProjects />\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route, Redirect,\r\n} from 'react-router-dom';\r\nimport routes from './routes';\r\n\r\nexport default function AppRouter() {\r\n  return (<Switch>\r\n    {routes.map(x => (<Route key={x.path} {...x} />))}\r\n    <Redirect from=\"/\" to={routes[0].path}/>\r\n  </Switch>);\r\n}\r\n","import React from 'react';\r\nimport './NavBar.scss';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport routes from '../../routes/routes';\r\nimport { languages } from '../../localization/i18n';\r\n\r\nexport default function NavBar() {\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation();\r\n  const changeLanguage = (language: string) => {\r\n    i18n.changeLanguage(language).then();\r\n  };\r\n\r\n  const langs = (\r\n    <div>\r\n      {languages.filter(x => i18n.language !== x.value).map((lang) => (\r\n        <button\r\n          className=\"button-lang\"\r\n          type=\"button\"\r\n          key={lang.value}\r\n          onClick={() => changeLanguage(lang.value)}\r\n        >\r\n          {lang.label.toUpperCase()}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <span className=\"header__title\">{t('name')}</span>\r\n      <div className=\"header__links\">\r\n        {routes.map((x) => (\r\n          <Link\r\n            key={x.path}\r\n            className=\"header__links-link\"\r\n            to={x.path}\r\n            data-active={location.pathname === x.path}\r\n          >\r\n            {t(x.label)}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      {langs}\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Contact.scss';\r\nimport github from '../../assets/icons/github.svg';\r\nimport vk from '../../assets/icons/vk.svg';\r\n\r\nenum ContactType {\r\n  Site\r\n}\r\n\r\ntype Contact = {\r\n  name: string;\r\n  url?: string;\r\n  type?: ContactType;\r\n  icon: any;\r\n};\r\n\r\nconst contacts: Contact[] = [\r\n  {\r\n    name: '',\r\n    url: 'https://github.com/xeleoss',\r\n    type: ContactType.Site,\r\n    icon: github,\r\n  },\r\n  {\r\n    name: '',\r\n    url: 'https://vk.com/soelex',\r\n    type: ContactType.Site,\r\n    icon: vk,\r\n  },\r\n];\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <div className=\"contacts\">\r\n      {contacts.map((c) => (\r\n        <a\r\n          href={c.url ?? '*'}\r\n          className=\"contacts__contact\"\r\n          key={c.name + c.url}\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          <img src={c.icon} alt=\"logo\" /> <span>{c.name}</span>\r\n        </a>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/github.d1bb13ce.svg\";","export default __webpack_public_path__ + \"static/media/vk.b65afadd.svg\";","import React from 'react';\nimport AppRouter from './routes/AppRouter';\nimport NavBar from './components/NavBar/NavBar';\nimport Contacts from './components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <>\n      <main className=\"app-content\">\n        <NavBar />\n        <AppRouter />\n      </main>\n      <footer className=\"pageFooter\">\n        <Contacts />\n        <div className=\"pageFooter__branding\">\n            © copyright 2021\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter  } from 'react-router-dom';\nimport './localization/i18n';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Suspense fallback={<div className=\"m-5\">Loading...</div>}>\n        <App />\n      </Suspense>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}